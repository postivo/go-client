// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/postivo/go-client/internal/utils"
	"github.com/postivo/go-client/models/components"
	"github.com/postivo/go-client/optionalnullable"
)

type ListContactsRequest struct {
	// Page number of results
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Results limit per page.
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
}

func (l ListContactsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListContactsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListContactsRequest) GetPage() *int64 {
	if l == nil {
		return nil
	}
	return l.Page
}

func (l *ListContactsRequest) GetLimit() *int64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

type ListContactsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request was processed successfully. Contact details are included in the response body.
	ContactResponses []components.ContactResponse
	// Invalid request.
	ErrorResponse optionalnullable.OptionalNullable[components.ErrorResponse]
	Headers       map[string][]string
}

func (l *ListContactsResponse) GetHTTPMeta() components.HTTPMetadata {
	if l == nil {
		return components.HTTPMetadata{}
	}
	return l.HTTPMeta
}

func (l *ListContactsResponse) GetContactResponses() []components.ContactResponse {
	if l == nil {
		return nil
	}
	return l.ContactResponses
}

func (l *ListContactsResponse) GetErrorResponse() optionalnullable.OptionalNullable[components.ErrorResponse] {
	if l == nil {
		return nil
	}
	return l.ErrorResponse
}

func (l *ListContactsResponse) GetHeaders() map[string][]string {
	if l == nil {
		return map[string][]string{}
	}
	return l.Headers
}
