// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/postivo/go-client/internal/utils"
)

type RecipientsType string

const (
	RecipientsTypeRecipientInline                      RecipientsType = "RecipientInline"
	RecipientsTypeRecipientFromAddressBook             RecipientsType = "RecipientFromAddressBook"
	RecipientsTypeRecipientFromAddressBookByExternalID RecipientsType = "RecipientFromAddressBookByExternalId"
)

// Recipients - A base recipient object.
type Recipients struct {
	RecipientInline                      *RecipientInline                      `queryParam:"inline,name=Recipients"`
	RecipientFromAddressBook             *RecipientFromAddressBook             `queryParam:"inline,name=Recipients"`
	RecipientFromAddressBookByExternalID *RecipientFromAddressBookByExternalID `queryParam:"inline,name=Recipients"`

	Type RecipientsType
}

func CreateRecipientsRecipientInline(recipientInline RecipientInline) Recipients {
	typ := RecipientsTypeRecipientInline

	return Recipients{
		RecipientInline: &recipientInline,
		Type:            typ,
	}
}

func CreateRecipientsRecipientFromAddressBook(recipientFromAddressBook RecipientFromAddressBook) Recipients {
	typ := RecipientsTypeRecipientFromAddressBook

	return Recipients{
		RecipientFromAddressBook: &recipientFromAddressBook,
		Type:                     typ,
	}
}

func CreateRecipientsRecipientFromAddressBookByExternalID(recipientFromAddressBookByExternalID RecipientFromAddressBookByExternalID) Recipients {
	typ := RecipientsTypeRecipientFromAddressBookByExternalID

	return Recipients{
		RecipientFromAddressBookByExternalID: &recipientFromAddressBookByExternalID,
		Type:                                 typ,
	}
}

func (u *Recipients) UnmarshalJSON(data []byte) error {

	var recipientInline RecipientInline = RecipientInline{}
	if err := utils.UnmarshalJSON(data, &recipientInline, "", true, nil); err == nil {
		u.RecipientInline = &recipientInline
		u.Type = RecipientsTypeRecipientInline
		return nil
	}

	var recipientFromAddressBook RecipientFromAddressBook = RecipientFromAddressBook{}
	if err := utils.UnmarshalJSON(data, &recipientFromAddressBook, "", true, nil); err == nil {
		u.RecipientFromAddressBook = &recipientFromAddressBook
		u.Type = RecipientsTypeRecipientFromAddressBook
		return nil
	}

	var recipientFromAddressBookByExternalID RecipientFromAddressBookByExternalID = RecipientFromAddressBookByExternalID{}
	if err := utils.UnmarshalJSON(data, &recipientFromAddressBookByExternalID, "", true, nil); err == nil {
		u.RecipientFromAddressBookByExternalID = &recipientFromAddressBookByExternalID
		u.Type = RecipientsTypeRecipientFromAddressBookByExternalID
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Recipients", string(data))
}

func (u Recipients) MarshalJSON() ([]byte, error) {
	if u.RecipientInline != nil {
		return utils.MarshalJSON(u.RecipientInline, "", true)
	}

	if u.RecipientFromAddressBook != nil {
		return utils.MarshalJSON(u.RecipientFromAddressBook, "", true)
	}

	if u.RecipientFromAddressBookByExternalID != nil {
		return utils.MarshalJSON(u.RecipientFromAddressBookByExternalID, "", true)
	}

	return nil, errors.New("could not marshal union type Recipients: all fields are null")
}
