// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/postivo/go-client/internal/utils"
	"github.com/postivo/go-client/optionalnullable"
	"github.com/postivo/go-client/types"
	"time"
)

// ShipmentDetailsStatus - Shipment processing status.
type ShipmentDetailsStatus struct {
	// Indicates whether an error occurred during shipment processing.
	Error *bool `json:"error,omitempty"`
	// Shipment status code.
	Code *string `json:"code,omitempty"`
	// Shipment status description.
	Name *string `json:"name,omitempty"`
	// Date and time of the shipment status change (UTC).
	Date *time.Time `json:"date,omitempty"`
}

func (s ShipmentDetailsStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ShipmentDetailsStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *ShipmentDetailsStatus) GetError() *bool {
	if s == nil {
		return nil
	}
	return s.Error
}

func (s *ShipmentDetailsStatus) GetCode() *string {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *ShipmentDetailsStatus) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *ShipmentDetailsStatus) GetDate() *time.Time {
	if s == nil {
		return nil
	}
	return s.Date
}

// ShipmentDetailsCarrier - Postal operator handling the shipment.
type ShipmentDetailsCarrier struct {
	// Postal operator ID.
	ID optionalnullable.OptionalNullable[int64] `json:"id,omitempty"`
	// Postal operator name.
	Name optionalnullable.OptionalNullable[string] `json:"name,omitempty"`
}

func (s *ShipmentDetailsCarrier) GetID() optionalnullable.OptionalNullable[int64] {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ShipmentDetailsCarrier) GetName() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.Name
}

// ShipmentDetailsService - Service (shipment type) used.
type ShipmentDetailsService struct {
	// Service type ID (shipment/letter type).
	ID optionalnullable.OptionalNullable[int64] `json:"id,omitempty"`
	// Service type name (shipment/letter type).
	Name optionalnullable.OptionalNullable[string] `json:"name,omitempty"`
}

func (s *ShipmentDetailsService) GetID() optionalnullable.OptionalNullable[int64] {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ShipmentDetailsService) GetName() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.Name
}

// ShipmentDetails - Single shipment details
type ShipmentDetails struct {
	// Unique shipment identifier.
	ID optionalnullable.OptionalNullable[string] `json:"id,omitempty"`
	// Custom shipment ID assigned by the user.
	CustomID optionalnullable.OptionalNullable[string] `json:"custom_id,omitempty"`
	// Carrier-provided shipment tracking number.
	TrackingNumber optionalnullable.OptionalNullable[string] `json:"tracking_number,omitempty"`
	// Recipient data for a shipment, including full postal address.
	Recipient *Recipient `json:"recipient,omitempty"`
	// Sender data for the shipment.
	Sender *Sender `json:"sender,omitempty"`
	// Shipment processing status.
	Status *ShipmentDetailsStatus `json:"status,omitempty"`
	// Postal operator handling the shipment.
	Carrier *ShipmentDetailsCarrier `json:"carrier,omitempty"`
	// Service (shipment type) used.
	Service *ShipmentDetailsService `json:"service,omitempty"`
	// Dispatch date.
	DispatchDate optionalnullable.OptionalNullable[types.Date] `json:"dispatch_date,omitempty"`
	// Total number of pages across all documents in the shipment.
	PageNumber *int64 `json:"page_number,omitempty"`
	// Shipment price (PLN).
	Price *float32 `json:"price,omitempty"`
}

func (s ShipmentDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ShipmentDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *ShipmentDetails) GetID() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ShipmentDetails) GetCustomID() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.CustomID
}

func (s *ShipmentDetails) GetTrackingNumber() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.TrackingNumber
}

func (s *ShipmentDetails) GetRecipient() *Recipient {
	if s == nil {
		return nil
	}
	return s.Recipient
}

func (s *ShipmentDetails) GetSender() *Sender {
	if s == nil {
		return nil
	}
	return s.Sender
}

func (s *ShipmentDetails) GetStatus() *ShipmentDetailsStatus {
	if s == nil {
		return nil
	}
	return s.Status
}

func (s *ShipmentDetails) GetCarrier() *ShipmentDetailsCarrier {
	if s == nil {
		return nil
	}
	return s.Carrier
}

func (s *ShipmentDetails) GetService() *ShipmentDetailsService {
	if s == nil {
		return nil
	}
	return s.Service
}

func (s *ShipmentDetails) GetDispatchDate() optionalnullable.OptionalNullable[types.Date] {
	if s == nil {
		return nil
	}
	return s.DispatchDate
}

func (s *ShipmentDetails) GetPageNumber() *int64 {
	if s == nil {
		return nil
	}
	return s.PageNumber
}

func (s *ShipmentDetails) GetPrice() *float32 {
	if s == nil {
		return nil
	}
	return s.Price
}
