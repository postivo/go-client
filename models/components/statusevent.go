// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/postivo/go-client/internal/utils"
	"github.com/postivo/go-client/optionalnullable"
	"time"
)

// StatusEvent - Single shipment status event.
type StatusEvent struct {
	// Unique status event ID.
	UniqueID *int64 `json:"unique_id,omitempty"`
	// Event type: `OK` (regular) or `EX` (exception/irregular).
	Type *string `json:"type,omitempty"`
	// Status event code.
	Code *string `json:"code,omitempty"`
	// Status event description.
	Name *string `json:"name,omitempty"`
	// Status event details (for EXTERNAL status codes).
	Details optionalnullable.OptionalNullable[string] `json:"details,omitempty"`
	// Status event timestamp (UTC).
	Date *time.Time `json:"date,omitempty"`
}

func (s StatusEvent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StatusEvent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *StatusEvent) GetUniqueID() *int64 {
	if s == nil {
		return nil
	}
	return s.UniqueID
}

func (s *StatusEvent) GetType() *string {
	if s == nil {
		return nil
	}
	return s.Type
}

func (s *StatusEvent) GetCode() *string {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StatusEvent) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *StatusEvent) GetDetails() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.Details
}

func (s *StatusEvent) GetDate() *time.Time {
	if s == nil {
		return nil
	}
	return s.Date
}
