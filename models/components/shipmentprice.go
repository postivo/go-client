// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/postivo/go-client/internal/utils"
	"github.com/postivo/go-client/optionalnullable"
	"time"
)

// ShipmentPriceStatus - Shipment processing status.
type ShipmentPriceStatus struct {
	// Indicates whether an error occurred during processing.
	Error *bool `json:"error,omitempty"`
	// Status code.
	Code *string `json:"code,omitempty"`
	// Status description.
	Description *string `json:"description,omitempty"`
	// Status timestamp (UTC).
	Date *time.Time `json:"date,omitempty"`
}

func (s ShipmentPriceStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ShipmentPriceStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *ShipmentPriceStatus) GetError() *bool {
	if s == nil {
		return nil
	}
	return s.Error
}

func (s *ShipmentPriceStatus) GetCode() *string {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *ShipmentPriceStatus) GetDescription() *string {
	if s == nil {
		return nil
	}
	return s.Description
}

func (s *ShipmentPriceStatus) GetDate() *time.Time {
	if s == nil {
		return nil
	}
	return s.Date
}

// ShipmentPriceCarrier - Postal operator that will handle the shipment.
type ShipmentPriceCarrier struct {
	// Postal operator ID.
	ID optionalnullable.OptionalNullable[int64] `json:"id,omitempty"`
	// Postal operator name.
	Name optionalnullable.OptionalNullable[string] `json:"name,omitempty"`
}

func (s *ShipmentPriceCarrier) GetID() optionalnullable.OptionalNullable[int64] {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ShipmentPriceCarrier) GetName() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.Name
}

// ShipmentPriceService - Service (shipment type) selected.
type ShipmentPriceService struct {
	// Service type ID (shipment/letter type).
	ID optionalnullable.OptionalNullable[int64] `json:"id,omitempty"`
	// Service type name (shipment/letter type).
	Name optionalnullable.OptionalNullable[string] `json:"name,omitempty"`
}

func (s *ShipmentPriceService) GetID() optionalnullable.OptionalNullable[int64] {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ShipmentPriceService) GetName() optionalnullable.OptionalNullable[string] {
	if s == nil {
		return nil
	}
	return s.Name
}

// ShipmentPrice - Pricing details for a single shipment
type ShipmentPrice struct {
	// Recipient data for a shipment, including full postal address.
	Recipient *Recipient `json:"recipient,omitempty"`
	// Sender data for the shipment.
	Sender *Sender `json:"sender,omitempty"`
	// Shipment processing status.
	Status *ShipmentPriceStatus `json:"status,omitempty"`
	// Postal operator that will handle the shipment.
	Carrier *ShipmentPriceCarrier `json:"carrier,omitempty"`
	// Service (shipment type) selected.
	Service *ShipmentPriceService `json:"service,omitempty"`
	// Total number of pages across all documents in the shipment.
	PageNumber *int64 `json:"page_number,omitempty"`
	// Shipment price (PLN).
	Price *float32 `json:"price,omitempty"`
}

func (s *ShipmentPrice) GetRecipient() *Recipient {
	if s == nil {
		return nil
	}
	return s.Recipient
}

func (s *ShipmentPrice) GetSender() *Sender {
	if s == nil {
		return nil
	}
	return s.Sender
}

func (s *ShipmentPrice) GetStatus() *ShipmentPriceStatus {
	if s == nil {
		return nil
	}
	return s.Status
}

func (s *ShipmentPrice) GetCarrier() *ShipmentPriceCarrier {
	if s == nil {
		return nil
	}
	return s.Carrier
}

func (s *ShipmentPrice) GetService() *ShipmentPriceService {
	if s == nil {
		return nil
	}
	return s.Service
}

func (s *ShipmentPrice) GetPageNumber() *int64 {
	if s == nil {
		return nil
	}
	return s.PageNumber
}

func (s *ShipmentPrice) GetPrice() *float32 {
	if s == nil {
		return nil
	}
	return s.Price
}
